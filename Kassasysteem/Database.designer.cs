#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kassasysteem
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="KassaApp")]
	public partial class DatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertType(Type instance);
    partial void UpdateType(Type instance);
    partial void DeleteType(Type instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertCustomerAccount(CustomerAccount instance);
    partial void UpdateCustomerAccount(CustomerAccount instance);
    partial void DeleteCustomerAccount(CustomerAccount instance);
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    #endregion
		
		public DatabaseDataContext() : 
				base(global::Kassasysteem.Properties.Settings.Default.KassaAppConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Type> Types
		{
			get
			{
				return this.GetTable<Type>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<CustomerAccount> CustomerAccounts
		{
			get
			{
				return this.GetTable<CustomerAccount>();
			}
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Type")]
	public partial class Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TypeId;
		
		private string _naam;
		
		private decimal _rente;
		
		private string _maguitgeven;
		
		private EntitySet<Account> _Accounts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTypeIdChanging(int value);
    partial void OnTypeIdChanged();
    partial void OnnaamChanging(string value);
    partial void OnnaamChanged();
    partial void OnrenteChanging(decimal value);
    partial void OnrenteChanged();
    partial void OnmaguitgevenChanging(string value);
    partial void OnmaguitgevenChanged();
    #endregion
		
		public Type()
		{
			this._Accounts = new EntitySet<Account>(new Action<Account>(this.attach_Accounts), new Action<Account>(this.detach_Accounts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					this.OnTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TypeId = value;
					this.SendPropertyChanged("TypeId");
					this.OnTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_naam", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string naam
		{
			get
			{
				return this._naam;
			}
			set
			{
				if ((this._naam != value))
				{
					this.OnnaamChanging(value);
					this.SendPropertyChanging();
					this._naam = value;
					this.SendPropertyChanged("naam");
					this.OnnaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rente", DbType="Decimal(18,2) NOT NULL")]
		public decimal rente
		{
			get
			{
				return this._rente;
			}
			set
			{
				if ((this._rente != value))
				{
					this.OnrenteChanging(value);
					this.SendPropertyChanging();
					this._rente = value;
					this.SendPropertyChanged("rente");
					this.OnrenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maguitgeven", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string maguitgeven
		{
			get
			{
				return this._maguitgeven;
			}
			set
			{
				if ((this._maguitgeven != value))
				{
					this.OnmaguitgevenChanging(value);
					this.SendPropertyChanging();
					this._maguitgeven = value;
					this.SendPropertyChanged("maguitgeven");
					this.OnmaguitgevenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Type_Account", Storage="_Accounts", ThisKey="TypeId", OtherKey="TypeId")]
		public EntitySet<Account> Accounts
		{
			get
			{
				return this._Accounts;
			}
			set
			{
				this._Accounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Accounts(Account entity)
		{
			this.SendPropertyChanging();
			entity.Type = this;
		}
		
		private void detach_Accounts(Account entity)
		{
			this.SendPropertyChanging();
			entity.Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerId;
		
		private string _voornaam;
		
		private string _achternaam;
		
		private string _leeftijd;
		
		private string _woonplaats;
		
		private string _adres;
		
		private string _bsn;
		
		private string _geboortedatum;
		
		private string _email;
		
		private string _telefoon;
		
		private EntityRef<CustomerAccount> _CustomerAccounts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnvoornaamChanging(string value);
    partial void OnvoornaamChanged();
    partial void OnachternaamChanging(string value);
    partial void OnachternaamChanged();
    partial void OnleeftijdChanging(string value);
    partial void OnleeftijdChanged();
    partial void OnwoonplaatsChanging(string value);
    partial void OnwoonplaatsChanged();
    partial void OnadresChanging(string value);
    partial void OnadresChanged();
    partial void OnbsnChanging(string value);
    partial void OnbsnChanged();
    partial void OngeboortedatumChanging(string value);
    partial void OngeboortedatumChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OntelefoonChanging(string value);
    partial void OntelefoonChanged();
    #endregion
		
		public Customer()
		{
			this._CustomerAccounts = default(EntityRef<CustomerAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_voornaam", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string voornaam
		{
			get
			{
				return this._voornaam;
			}
			set
			{
				if ((this._voornaam != value))
				{
					this.OnvoornaamChanging(value);
					this.SendPropertyChanging();
					this._voornaam = value;
					this.SendPropertyChanged("voornaam");
					this.OnvoornaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_achternaam", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string achternaam
		{
			get
			{
				return this._achternaam;
			}
			set
			{
				if ((this._achternaam != value))
				{
					this.OnachternaamChanging(value);
					this.SendPropertyChanging();
					this._achternaam = value;
					this.SendPropertyChanged("achternaam");
					this.OnachternaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_leeftijd", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string leeftijd
		{
			get
			{
				return this._leeftijd;
			}
			set
			{
				if ((this._leeftijd != value))
				{
					this.OnleeftijdChanging(value);
					this.SendPropertyChanging();
					this._leeftijd = value;
					this.SendPropertyChanged("leeftijd");
					this.OnleeftijdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_woonplaats", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string woonplaats
		{
			get
			{
				return this._woonplaats;
			}
			set
			{
				if ((this._woonplaats != value))
				{
					this.OnwoonplaatsChanging(value);
					this.SendPropertyChanging();
					this._woonplaats = value;
					this.SendPropertyChanged("woonplaats");
					this.OnwoonplaatsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adres", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string adres
		{
			get
			{
				return this._adres;
			}
			set
			{
				if ((this._adres != value))
				{
					this.OnadresChanging(value);
					this.SendPropertyChanging();
					this._adres = value;
					this.SendPropertyChanged("adres");
					this.OnadresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bsn", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string bsn
		{
			get
			{
				return this._bsn;
			}
			set
			{
				if ((this._bsn != value))
				{
					this.OnbsnChanging(value);
					this.SendPropertyChanging();
					this._bsn = value;
					this.SendPropertyChanged("bsn");
					this.OnbsnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_geboortedatum", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string geboortedatum
		{
			get
			{
				return this._geboortedatum;
			}
			set
			{
				if ((this._geboortedatum != value))
				{
					this.OngeboortedatumChanging(value);
					this.SendPropertyChanging();
					this._geboortedatum = value;
					this.SendPropertyChanged("geboortedatum");
					this.OngeboortedatumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefoon", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string telefoon
		{
			get
			{
				return this._telefoon;
			}
			set
			{
				if ((this._telefoon != value))
				{
					this.OntelefoonChanging(value);
					this.SendPropertyChanging();
					this._telefoon = value;
					this.SendPropertyChanged("telefoon");
					this.OntelefoonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerAccount", Storage="_CustomerAccounts", ThisKey="CustomerId", OtherKey="CustomerId", IsUnique=true, IsForeignKey=false)]
		public CustomerAccount CustomerAccounts
		{
			get
			{
				return this._CustomerAccounts.Entity;
			}
			set
			{
				CustomerAccount previousValue = this._CustomerAccounts.Entity;
				if (((previousValue != value) 
							|| (this._CustomerAccounts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerAccounts.Entity = null;
						previousValue.Customer = null;
					}
					this._CustomerAccounts.Entity = value;
					if ((value != null))
					{
						value.Customer = this;
					}
					this.SendPropertyChanged("CustomerAccounts");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerAccount")]
	public partial class CustomerAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerId;
		
		private int _AccountId;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    #endregion
		
		public CustomerAccount()
		{
			this._Customer = default(EntityRef<Customer>);
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerAccount", Storage="_Customer", ThisKey="CustomerId", OtherKey="CustomerId", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.CustomerAccounts = null;
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.CustomerAccounts = this;
						this._CustomerId = value.CustomerId;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_CustomerAccount", Storage="_Account", ThisKey="AccountId", OtherKey="AccountId", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.CustomerAccounts = null;
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.CustomerAccounts = this;
						this._AccountId = value.AccountId;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountId;
		
		private System.Nullable<int> _CustomerId;
		
		private int _TypeId;
		
		private string _startdatum;
		
		private decimal _saldo;
		
		private decimal _bestedingslimiet;
		
		private EntityRef<CustomerAccount> _CustomerAccounts;
		
		private EntityRef<Type> _Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnCustomerIdChanging(System.Nullable<int> value);
    partial void OnCustomerIdChanged();
    partial void OnTypeIdChanging(int value);
    partial void OnTypeIdChanged();
    partial void OnstartdatumChanging(string value);
    partial void OnstartdatumChanged();
    partial void OnsaldoChanging(decimal value);
    partial void OnsaldoChanged();
    partial void OnbestedingslimietChanging(decimal value);
    partial void OnbestedingslimietChanged();
    #endregion
		
		public Account()
		{
			this._CustomerAccounts = default(EntityRef<CustomerAccount>);
			this._Type = default(EntityRef<Type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int")]
		public System.Nullable<int> CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", DbType="Int NOT NULL")]
		public int TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					if (this._Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TypeId = value;
					this.SendPropertyChanged("TypeId");
					this.OnTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startdatum", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string startdatum
		{
			get
			{
				return this._startdatum;
			}
			set
			{
				if ((this._startdatum != value))
				{
					this.OnstartdatumChanging(value);
					this.SendPropertyChanging();
					this._startdatum = value;
					this.SendPropertyChanged("startdatum");
					this.OnstartdatumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_saldo", DbType="Money NOT NULL")]
		public decimal saldo
		{
			get
			{
				return this._saldo;
			}
			set
			{
				if ((this._saldo != value))
				{
					this.OnsaldoChanging(value);
					this.SendPropertyChanging();
					this._saldo = value;
					this.SendPropertyChanged("saldo");
					this.OnsaldoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bestedingslimiet", DbType="Money NOT NULL")]
		public decimal bestedingslimiet
		{
			get
			{
				return this._bestedingslimiet;
			}
			set
			{
				if ((this._bestedingslimiet != value))
				{
					this.OnbestedingslimietChanging(value);
					this.SendPropertyChanging();
					this._bestedingslimiet = value;
					this.SendPropertyChanged("bestedingslimiet");
					this.OnbestedingslimietChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_CustomerAccount", Storage="_CustomerAccounts", ThisKey="AccountId", OtherKey="AccountId", IsUnique=true, IsForeignKey=false)]
		public CustomerAccount CustomerAccounts
		{
			get
			{
				return this._CustomerAccounts.Entity;
			}
			set
			{
				CustomerAccount previousValue = this._CustomerAccounts.Entity;
				if (((previousValue != value) 
							|| (this._CustomerAccounts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerAccounts.Entity = null;
						previousValue.Account = null;
					}
					this._CustomerAccounts.Entity = value;
					if ((value != null))
					{
						value.Account = this;
					}
					this.SendPropertyChanged("CustomerAccounts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Type_Account", Storage="_Type", ThisKey="TypeId", OtherKey="TypeId", IsForeignKey=true)]
		public Type Type
		{
			get
			{
				return this._Type.Entity;
			}
			set
			{
				Type previousValue = this._Type.Entity;
				if (((previousValue != value) 
							|| (this._Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Type.Entity = null;
						previousValue.Accounts.Remove(this);
					}
					this._Type.Entity = value;
					if ((value != null))
					{
						value.Accounts.Add(this);
						this._TypeId = value.TypeId;
					}
					else
					{
						this._TypeId = default(int);
					}
					this.SendPropertyChanged("Type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
